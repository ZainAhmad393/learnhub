// Login component
import React, { useState } from "react";
import loginimage from "./../assets/login/login.png";
import styles from "./../stylesheet/login.module.css";
import { FaEye, FaEyeSlash } from "react-icons/fa";
import axios from 'axios';
import { useAuth } from './../context/AuthContext';
import { useNavigate } from 'react-router-dom'; // âœ… useNavigate import karna hai
import { Link } from "react-router-dom";
const Login = () => {
Â  const navigate = useNavigate(); // ðŸŒŸ Hook initialize
Â  const { login } = useAuth(); 
Â  const [formData, setFormData] = useState({
Â  Â  email: "",
Â  Â  password: "",
Â  });
Â  const [showPassword, setShowPassword] = useState(false);
Â  const [errors, setErrors] = useState({});
Â  const [loading, setLoading] = useState(false);

Â  const handleChange = (e) => {
Â  Â  const { name, value } = e.target;
Â  Â  setFormData({ ...formData, [name]: value });
Â  };

Â  const validateForm = () => {
Â  Â  const newErrors = {};
Â  Â  if (!formData.email) {
Â  Â  Â  newErrors.email = "Email is required.";
Â  Â  } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
Â  Â  Â  newErrors.email = "Email address is invalid.";
Â  Â  }
Â  Â  if (!formData.password) {
Â  Â  Â  newErrors.password = "Password is required.";
Â  Â  } else if (formData.password.length < 6) {
Â  Â  Â  newErrors.password = "Password must be at least 6 characters long.";
Â  Â  }
Â  Â  setErrors(newErrors);
Â  Â  return Object.keys(newErrors).length === 0;
Â  };

Â  const handleSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  if (!validateForm()) return;

Â  Â  setLoading(true);
Â  Â  setErrors({});
Â  Â  try {
Â  Â  Â  Â  const res = await axios.post('http://localhost:5000/api/auth/login', formData);
Â  Â  Â  Â Â 
Â  Â  Â  Â  // Backend successful, token receive hua, login context update karen
Â  Â  Â  Â  login(res.data);Â 
Â  Â  Â  Â Â 
Â  Â  Â  Â  // ðŸŒŸ FIX: Redirection to Home Page
Â  Â  Â  Â  navigate('/'); 

Â  Â  } catch (error) {
Â  Â  Â  Â  const msg = error.response?.data?.message || 'Login failed. Check credentials.';
Â  Â  Â  Â  setErrors({ general: msg });
Â  Â  Â  Â  console.error('Login Error:', error);
Â  Â  } finally {
Â  Â  Â  Â  setLoading(false);
Â  Â  }
Â  };

Â  return (
Â  Â  <div className={`container ${styles.loginContainer}`}>
Â  Â  Â  <div className="row align-items-center">
Â  Â  Â  Â  <div className="col-md-6">
Â  Â  Â  Â  Â  <img
Â  Â  Â  Â  Â  Â  src={loginimage}
Â  Â  Â  Â  Â  Â  alt="Login illustration"
Â  Â  Â  Â  Â  Â  className={`${styles.loginsideImage} img-fluid`}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div className="col-md-6">
Â  Â  Â  Â  Â  <div className={styles.loginContent}>
Â  Â  Â  Â  Â  Â  <h2 className={`mt-5 ${styles.welcomeHeading}`}>
Â  Â  Â  Â  Â  Â  Â  Welcome to LearnHub!
Â  Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  Â  <form
Â  Â  Â  Â  Â  Â  Â  method="POST"
Â  Â  Â  Â  Â  Â  Â  onSubmit={handleSubmit}
Â  Â  Â  Â  Â  Â  Â  className={styles.loginFormParent}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {errors.general && <p className={`${styles.errorText} text-center`}>{errors.general}</p>}

Â  Â  Â  Â  Â  Â  Â  {/* Email Input */}
Â  Â  Â  Â  Â  Â  Â  <label htmlFor="email" className={styles.formLabel}>
Â  Â  Â  Â  Â  Â  Â  Â  Email
Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  type="email"
Â  Â  Â  Â  Â  Â  Â  Â  name="email"
Â  Â  Â  Â  Â  Â  Â  Â  id="email"
Â  Â  Â  Â  Â  Â  Â  Â  value={formData.email}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  className={`${styles.emailInputLogin} ${styles.animatedInput}`}
Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Enter your email"
Â  Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  {errors.email && (
Â  Â  Â  Â  Â  Â  Â  Â  <p className={styles.errorText}>{errors.email}</p>
Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  {/* Password Input with Icon */}
Â  Â  Â  Â  Â  Â  Â  <label htmlFor="password" className={styles.formLabel}>
Â  Â  Â  Â  Â  Â  Â  Â  Password
Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  <div className={styles.passwordWrapper}>
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type={showPassword ? "text" : "password"}
Â  Â  Â  Â  Â  Â  Â  Â  Â  name="password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  id="password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={formData.password}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`${styles.passwordInputLogin} ${styles.animatedInput}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  required
Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Enter your password"
Â  Â  Â  Â  Â  Â  Â  Â  Â  disabled={loading}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <span
Â  Â  Â  Â  Â  Â  Â  Â  Â  className={styles.toggleIcon}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setShowPassword(!showPassword)}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  {showPassword ? <FaEyeSlash /> : <FaEye />}
Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  {errors.password && (
Â  Â  Â  Â  Â  Â  Â  Â  <p className={styles.errorText}>{errors.password}</p>
Â  Â  Â  Â  Â  Â  Â  )}

Â  Â  Â  Â  Â  Â  Â  {/* Remember Me + Forgot Password */}
Â  Â  Â  Â  Â  Â  Â  <div className={styles.forgotAndRememberMe}>
Â  Â  Â  Â  Â  Â  Â  Â  <div className={styles.customCheckbox}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <input type="checkbox" id="rememberMe" disabled={loading} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  <label htmlFor="rememberMe">Remember me</label>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  <div className={styles.forgot}>
                <Link to="/forgotpassword">Forgot Password?</Link>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  <button type="submit" className={styles.loginSubmitBtn} disabled={loading}>
Â  Â  Â  Â  Â  Â  Â  Â  {loading ? 'Logging In...' : 'Login'}
Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  </form>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default Login;
